// Copyright 2018 Alex Badics <admin@stickman.hu>
//
// This file is part of Hun-Law.
//
// Hun-Law is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Hun-Law is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Hun-Law.  If not, see <https://www.gnu.org/licenses/>.

start: regular_sentence+

regular_sentence: any_expression+ END_OF_SENTENCE

?any_expression: WORD DASH?
    | compound_reference
    | compound_structural_element_reference
    | constitution_reference
    | quoted_text
    | parenthesed_text
    | expression_from_now_on DASH?
    | from_now_on
    | NUMBER
    | NUMBER_WITH_DOT

expression_from_now_on: "(" WORD* "a" "továbbiakban" "együtt"? ":" WORD+ ")"

compound_reference: (act_reference reference?) | reference
reference: (article_reference paragraph_reference alphabetic_point_reference alphabetic_subpoint_reference)
    | (article_reference paragraph_reference numeric_point_reference alphabetic_subpoint_reference)
    | (article_reference paragraph_reference alphabetic_point_reference)
    | (article_reference paragraph_reference numeric_point_reference)
    | (article_reference paragraph_reference)
    | (article_reference alphabetic_point_reference alphabetic_subpoint_reference)
    | (article_reference numeric_point_reference alphabetic_subpoint_reference)
    | (article_reference alphabetic_point_reference)
    | (article_reference numeric_point_reference)
    | (article_reference)
    | (paragraph_reference alphabetic_point_reference alphabetic_subpoint_reference)
    | (paragraph_reference numeric_point_reference alphabetic_subpoint_reference)
    | (paragraph_reference alphabetic_point_reference)
    | (paragraph_reference numeric_point_reference)
    | (paragraph_reference)
    | (alphabetic_point_reference alphabetic_subpoint_reference)
    | (alphabetic_point_reference)
    | (alphabetic_subpoint_reference)

compound_structural_element_reference: (act_reference structural_element_reference?) | structural_element_reference
structural_element_reference: chapter_reference

act_reference: abbreviated_act_id | (act_id from_now_on?)
from_now_on: "(a továbbiakban: " ABBREVIATION "törvény"? ")"
abbreviated_act_id: ABBREVIATION
act_id: ACT_YEAR "évi" ACT_NUMBER "törvény"
ACT_YEAR: NUMBER_WITH_DOT
ACT_NUMBER: ROMAN_WITH_DOT

article_reference: ((article_id | article_range) LIST_SEPARATOR? /az?/?)+ ARTICLE_SUFFIX
article_range: ARTICLE_ID DASH ARTICLE_ID "."
article_id: ARTICLE_ID "."
ARTICLE_ID: (NUMBER ":" )? NUMBER ("/" "A".."Z")?
ARTICLE_SUFFIX: /§-[a-zéáőúöüóíű]+/ | "§"

paragraph_reference: ((paragraph_id | paragraph_range) LIST_SEPARATOR? /az?/?)+ PARAGRAPH_SUFFIX
paragraph_range: "(" PARAGRAPH_ID ")" DASH "(" PARAGRAPH_ID ")"
paragraph_id: "(" PARAGRAPH_ID ")"
PARAGRAPH_ID: NUMBER ("a".."z")?
PARAGRAPH_SUFFIX: /bekezdés[a-zéáőúöüóíű]+/ | "bekezdés"

alphabetic_point_reference: ((alphabetic_point_id | alphabetic_point_range) LIST_SEPARATOR? /az?/?)+ ALPHABETIC_POINT_SUFFIX
alphabetic_point_range: ALPHABETIC_POINT_ID ")" DASH ALPHABETIC_POINT_ID ")"
alphabetic_point_id: ALPHABETIC_POINT_ID ")"
ALPHABETIC_POINT_ID: "ny" | "sz" | "a".."z"
ALPHABETIC_POINT_SUFFIX: /pont[a-zéáőúöüóíű]+/ | "pont"

numeric_point_reference: ((numeric_point_id | numeric_point_range) LIST_SEPARATOR? /az?/?)+ NUMERIC_POINT_SUFFIX
numeric_point_range: NUMERIC_POINT_ID DASH NUMERIC_POINT_ID "."
numeric_point_id: NUMERIC_POINT_ID "."
NUMERIC_POINT_ID: NUMBER ("a".."z")?
NUMERIC_POINT_SUFFIX: /pont[a-zéáőúöüóíű]+/ | "pont"

alphabetic_subpoint_reference: ((alphabetic_subpoint_id | alphabetic_subpoint_range) LIST_SEPARATOR? /az?/?)+ ALPHABETIC_SUBPOINT_SUFFIX
alphabetic_subpoint_range: ALPHABETIC_SUBPOINT_ID ")" DASH ALPHABETIC_SUBPOINT_ID ")"
alphabetic_subpoint_id: ALPHABETIC_SUBPOINT_ID ")"
ALPHABETIC_SUBPOINT_ID: "a".."z" "a".."z"
ALPHABETIC_SUBPOINT_SUFFIX: /alpont[a-zéáőúöüóíű]+/ | "alpont"

LIST_SEPARATOR: ("," | "és" | "valamint" | "illetve" | "vagy")

constitution_reference: "Alaptörvény" constitution_article_id CONSTITUTION_ARTICLE_SUFFIX (paragraph_reference alphabetic_point_reference?)?
constitution_article_id: (constitution_article_alphabetic | constitution_article_roman | constitution_article_numeric)
constitution_article_alphabetic: CONSTITUTION_ARTICLE_ALPHABETIC ")"
constitution_article_roman: CONSTITUTION_ARTICLE_ROMAN "."
constitution_article_numeric: CONSTITUTION_ARTICLE_NUMERIC "."
CONSTITUTION_ARTICLE_ALPHABETIC: "A".."Z"
CONSTITUTION_ARTICLE_ROMAN: ROMAN
CONSTITUTION_ARTICLE_NUMERIC: NUMBER
CONSTITUTION_ARTICLE_SUFFIX: /cikk[a-zéáőúöüóíű]+/ | "cikk"

chapter_reference: chapter_id CHAPTER_SUFFIX
chapter_id: CHAPTER_ID "."
CHAPTER_ID: ROMAN ("/" "A".."Z")?
CHAPTER_SUFFIX:  /Fejezet[a-zéáőúöüóíű]+/ | "Fejezet"

quoted_text: "„" INSIDE_QUOTE quoted_text? INSIDE_QUOTE? "”"
INSIDE_QUOTE: /[^„”]/+

ABBREVIATION: UPPERCASE LOWERCASE+ "."

parenthesed_text: "(" WORD+ ")"

PARENTHESES: "(" | ")"
WORD: LETTER+

NUMBER: "0".."9"+
NUMBER_WITH_DOT: NUMBER "."
ROMAN: ("I" | "V" | "X" | "L" | "C" | "D" | "M")+ //TODO: actual grammar for this.
ROMAN_WITH_DOT: ROMAN "."

WS: /[ \t\f\r\n]/+
UPPERCASE: /[A-ZÉÁŐÚÖÜÓÍŰ]/
LOWERCASE: /[a-zéáőúöüóíű]/
LETTER: /[a-zéáőúöüóíűA-ZÉÁŐÚÖÜÓÍŰ\-]/
END_OF_SENTENCE: "." | "?" | ":"
SECTION_SIGN: "§"
DASH: "−" | "–" | "-"

OTHER: /[^ „”§()?:\.\t\f\r\n1-9a-zéáőúöüóíűA-ZÉÁŐÚÖÜÓÍŰ–−\/\-]/

%ignore WS
%ignore OTHER

